name: Deploy to Staging

env:
  APP_NAME: vuesion-next
  HEROKU_USERNAME: ${{secrets.HEROKU_USERNAME}}
  HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}

on:
  push:
    branches: [ next ]
  workflow_dispatch:
    branches: [ next ]

jobs:
  build_and_test:
    name: Build and test application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout Vuesion+ Datatable
        uses: actions/checkout@v2
        with:
          repository: vuesion/vuesion-plus-datatable
          path: ./src/components/a-datatable
          token: ${{ secrets.VUESION_PAT }}

      - name: Checkout Vuesion+ Calendar and Date picker
        uses: actions/checkout@v2
        with:
          repository: vuesion/vuesion-plus-calander-datepicker
          path: ./src/components/b-calender-datepicke
          token: ${{ secrets.VUESION_PAT }}

      - name: Checkout Vuesion+ Currency input
        uses: actions/checkout@v2
        with:
          repository: vuesion/vuesion-plus-currency-input
          path: ./src/components/c-currency-input
          token: ${{ secrets.VUESION_PAT }}

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        uses: cypress-io/github-action@v2
        with:
          runTests: false

      - name: Build and test application
        run: npm run ci

      - name: Run e2e tests
        uses: cypress-io/github-action@v2
        with:
          install: false
          start: npm start
          wait-on: 'http://localhost:3000'

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            .nuxt
            storybook-static

  deploy:
    needs: [ build_and_test ]
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Build Docker Image and deploy to Heroku
        run: |
          docker build -t $APP_NAME .
          set -eu -o pipefail
          echo $HEROKU_API_KEY | docker login --username=$HEROKU_USERNAME --password-stdin registry.heroku.com
          docker tag $APP_NAME registry.heroku.com/$APP_NAME/web
          docker push registry.heroku.com/$APP_NAME/web
          docker inspect registry.heroku.com/$APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID_FILE
          export WEB_DOCKER_IMAGE_ID=$(cat WEB_DOCKER_IMAGE_ID_FILE)
          curl -n -X PATCH https://api.heroku.com/apps/$APP_NAME/formation \
          -d '{ "updates": [ { "type": "web", "docker_image": "'"$WEB_DOCKER_IMAGE_ID"'" }]}' \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
          -H "Authorization: Bearer $HEROKU_API_KEY"
